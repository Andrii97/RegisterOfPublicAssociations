package com.mycompany.model.entity;
// Generated 06.05.2016 18:28:25 by Hibernate Tools 4.3.1


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * PublicAssociationHasPerson generated by hbm2java
 */
@Entity
@Table(name="public_association_has_person"
    ,catalog="register_of_public_association"
)
public class PublicAssociationHasPerson  implements java.io.Serializable {


     private PublicAssociationHasPersonId id;
     private Person person;
     private Post post;
     private PublicAssociation publicAssociation;
     private Integer founder;

    public PublicAssociationHasPerson() {
    }

	
    public PublicAssociationHasPerson(PublicAssociationHasPersonId id, Person person, Post post, PublicAssociation publicAssociation) {
        this.id = id;
        this.person = person;
        this.post = post;
        this.publicAssociation = publicAssociation;
    }
    public PublicAssociationHasPerson(PublicAssociationHasPersonId id, Person person, Post post, PublicAssociation publicAssociation, Integer founder) {
       this.id = id;
       this.person = person;
       this.post = post;
       this.publicAssociation = publicAssociation;
       this.founder = founder;
    }

    public PublicAssociationHasPerson(PublicAssociation publicAssociation, Person person, Post post) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        PublicAssociationHasPersonId publicAssociationHasPersonId = new PublicAssociationHasPersonId(
                publicAssociation.getId(), person.getId());
        this.id = publicAssociationHasPersonId;
        this.person = person;
        this.post = post;
        this.publicAssociation = publicAssociation;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="publicAssociationId", column=@Column(name="public_association_id", nullable=false) ), 
        @AttributeOverride(name="personId", column=@Column(name="person_id", nullable=false) ) } )
    public PublicAssociationHasPersonId getId() {
        return this.id;
    }
    
    public void setId(PublicAssociationHasPersonId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="person_id", nullable=false, insertable=false, updatable=false)
    public Person getPerson() {
        return this.person;
    }
    
    public void setPerson(Person person) {
        this.person = person;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="post_id", nullable=false)
    public Post getPost() {
        return this.post;
    }
    
    public void setPost(Post post) {
        this.post = post;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="public_association_id", nullable=false, insertable=false, updatable=false)
    public PublicAssociation getPublicAssociation() {
        return this.publicAssociation;
    }
    
    public void setPublicAssociation(PublicAssociation publicAssociation) {
        this.publicAssociation = publicAssociation;
    }

    
    @Column(name="founder")
    public Integer getFounder() {
        return this.founder;
    }
    
    public void setFounder(Integer founder) {
        this.founder = founder;
    }




}


