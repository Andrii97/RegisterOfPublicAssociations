package com.mycompany.model.entity;
// Generated 06.05.2016 18:28:25 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PublicAssociation generated by hbm2java
 */
@Entity
@Table(name="public_association"
    ,catalog="register_of_public_association"
)
public class PublicAssociation  implements java.io.Serializable {


     private Integer id;
     private Certificate certificate;
     private FormOfIncorporation formOfIncorporation;
     private Date dateOfRegistration;
     private Date dateOfClosing;
     private Date dateOfLastEvent;
     private Integer legalPosition;
     private String fullName;
     private String shortName;
     private String foreignLanguageName;
     private Integer businessActivities;
     private Integer usreouCode;
     private String phoneNumber;
     private String objective;
     private String state;
     private String address;
     private int firstLevelOfLocation;
     private int secondLevelOfLocation;
     private int thirdLevelOfLocation;
     private int fourthLevelOfLocation;
     private Set<Enterprise> enterprises = new HashSet(0);
     private Set<Kind> kinds = new HashSet(0);
     private Set<Symbolic> symbolics = new HashSet(0);
     private Set<Statuse> statuses = new HashSet(0);
     private Set<PublicAssociationHasPerson> publicAssociationHasPersons = new HashSet(0);
     private Set<PublicAssociation> publicAssociationsForPublicAssociationUnitId = new HashSet(0);
     private TerminationOfActivity terminationOfActivity;
     private Set<PublicAssociation> publicAssociationsForPublicAssociationId = new HashSet(0);

    public PublicAssociation() {
    }

	
    public PublicAssociation(FormOfIncorporation formOfIncorporation, String fullName, String state, int firstLevelOfLocation, int secondLevelOfLocation, int thirdLevelOfLocation, int fourthLevelOfLocation) {
        this.formOfIncorporation = formOfIncorporation;
        this.fullName = fullName;
        this.state = state;
        this.firstLevelOfLocation = firstLevelOfLocation;
        this.secondLevelOfLocation = secondLevelOfLocation;
        this.thirdLevelOfLocation = thirdLevelOfLocation;
        this.fourthLevelOfLocation = fourthLevelOfLocation;
        this.dateOfRegistration = new Date();
    }
    public PublicAssociation(Certificate certificate, FormOfIncorporation formOfIncorporation, Date dateOfRegistration, Date dateOfClosing, Date dateOfLastEvent, Integer legalPosition, String fullName, String shortName, String foreignLanguageName, Integer businessActivities, Integer usreouCode, String phoneNumber, String objective, String state, String address, int firstLevelOfLocation, int secondLevelOfLocation, int thirdLevelOfLocation, int fourthLevelOfLocation, Set<Enterprise> enterprises, Set<Kind> kinds, Set<Symbolic> symbolics, Set<Statuse> statuses, Set<PublicAssociationHasPerson> publicAssociationHasPersons, Set<PublicAssociation> publicAssociationsForPublicAssociationUnitId, TerminationOfActivity terminationOfActivity, Set<PublicAssociation> publicAssociationsForPublicAssociationId) {
       this.certificate = certificate;
       this.formOfIncorporation = formOfIncorporation;
       this.dateOfRegistration = dateOfRegistration;
       this.dateOfClosing = dateOfClosing;
       this.dateOfLastEvent = dateOfLastEvent;
       this.legalPosition = legalPosition;
       this.fullName = fullName;
       this.shortName = shortName;
       this.foreignLanguageName = foreignLanguageName;
       this.businessActivities = businessActivities;
       this.usreouCode = usreouCode;
       this.phoneNumber = phoneNumber;
       this.objective = objective;
       this.state = state;
       this.address = address;
       this.firstLevelOfLocation = firstLevelOfLocation;
       this.secondLevelOfLocation = secondLevelOfLocation;
       this.thirdLevelOfLocation = thirdLevelOfLocation;
       this.fourthLevelOfLocation = fourthLevelOfLocation;
       this.enterprises = enterprises;
       this.kinds = kinds;
       this.symbolics = symbolics;
       this.statuses = statuses;
       this.publicAssociationHasPersons = publicAssociationHasPersons;
       this.publicAssociationsForPublicAssociationUnitId = publicAssociationsForPublicAssociationUnitId;
       this.terminationOfActivity = terminationOfActivity;
       this.publicAssociationsForPublicAssociationId = publicAssociationsForPublicAssociationId;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="certificate_id")
    public Certificate getCertificate() {
        return this.certificate;
    }
    
    public void setCertificate(Certificate certificate) {
        this.certificate = certificate;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="form_of_incorporation_id", nullable=false)
    public FormOfIncorporation getFormOfIncorporation() {
        return this.formOfIncorporation;
    }
    
    public void setFormOfIncorporation(FormOfIncorporation formOfIncorporation) {
        this.formOfIncorporation = formOfIncorporation;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date_of_registration", length=19)
    public Date getDateOfRegistration() {
        return this.dateOfRegistration;
    }
    
    public void setDateOfRegistration(Date dateOfRegistration) {
        this.dateOfRegistration = dateOfRegistration;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date_of_closing", length=19)
    public Date getDateOfClosing() {
        return this.dateOfClosing;
    }
    
    public void setDateOfClosing(Date dateOfClosing) {
        this.dateOfClosing = dateOfClosing;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date_of_last_event", length=19)
    public Date getDateOfLastEvent() {
        return this.dateOfLastEvent;
    }
    
    public void setDateOfLastEvent(Date dateOfLastEvent) {
        this.dateOfLastEvent = dateOfLastEvent;
    }

    
    @Column(name="legal_position")
    public Integer getLegalPosition() {
        return this.legalPosition;
    }
    
    public void setLegalPosition(Integer legalPosition) {
        this.legalPosition = legalPosition;
    }

    
    @Column(name="full_name", nullable=false, length=65535)
    public String getFullName() {
        return this.fullName;
    }
    
    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    
    @Column(name="short_name", length=65535)
    public String getShortName() {
        return this.shortName;
    }
    
    public void setShortName(String shortName) {
        this.shortName = shortName;
    }

    
    @Column(name="foreign_language_name", length=65535)
    public String getForeignLanguageName() {
        return this.foreignLanguageName;
    }
    
    public void setForeignLanguageName(String foreignLanguageName) {
        this.foreignLanguageName = foreignLanguageName;
    }

    
    @Column(name="business_activities")
    public Integer getBusinessActivities() {
        return this.businessActivities;
    }
    
    public void setBusinessActivities(Integer businessActivities) {
        this.businessActivities = businessActivities;
    }

    
    @Column(name="USREOU_code")
    public Integer getUsreouCode() {
        return this.usreouCode;
    }
    
    public void setUsreouCode(Integer usreouCode) {
        this.usreouCode = usreouCode;
    }

    
    @Column(name="phone_number", length=45)
    public String getPhoneNumber() {
        return this.phoneNumber;
    }
    
    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    
    @Column(name="objective", length=45)
    public String getObjective() {
        return this.objective;
    }
    
    public void setObjective(String objective) {
        this.objective = objective;
    }

    
    @Column(name="state", nullable=false, length=45)
    public String getState() {
        return this.state;
    }
    
    public void setState(String state) {
        this.state = state;
    }

    
    @Column(name="address", length=45)
    public String getAddress() {
        return this.address;
    }
    
    public void setAddress(String address) {
        this.address = address;
    }

    
    @Column(name="first_level_of_location", nullable=false)
    public int getFirstLevelOfLocation() {
        return this.firstLevelOfLocation;
    }
    
    public void setFirstLevelOfLocation(int firstLevelOfLocation) {
        this.firstLevelOfLocation = firstLevelOfLocation;
    }

    
    @Column(name="second_level_of_location", nullable=false)
    public int getSecondLevelOfLocation() {
        return this.secondLevelOfLocation;
    }
    
    public void setSecondLevelOfLocation(int secondLevelOfLocation) {
        this.secondLevelOfLocation = secondLevelOfLocation;
    }

    
    @Column(name="third_level_of_location", nullable=false)
    public int getThirdLevelOfLocation() {
        return this.thirdLevelOfLocation;
    }
    
    public void setThirdLevelOfLocation(int thirdLevelOfLocation) {
        this.thirdLevelOfLocation = thirdLevelOfLocation;
    }

    
    @Column(name="fourth_level_of_location", nullable=false)
    public int getFourthLevelOfLocation() {
        return this.fourthLevelOfLocation;
    }
    
    public void setFourthLevelOfLocation(int fourthLevelOfLocation) {
        this.fourthLevelOfLocation = fourthLevelOfLocation;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="publicAssociation")
    public Set<Enterprise> getEnterprises() {
        return this.enterprises;
    }
    
    public void setEnterprises(Set<Enterprise> enterprises) {
        this.enterprises = enterprises;
    }

@ManyToMany(fetch=FetchType.EAGER)
    @JoinTable(name="public_association_has_kind", catalog="register_of_public_association", joinColumns = { 
        @JoinColumn(name="public_association_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="kind_id", nullable=false, updatable=false) })
    public Set<Kind> getKinds() {
        return this.kinds;
    }
    
    public void setKinds(Set<Kind> kinds) {
        this.kinds = kinds;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="publicAssociation")
    public Set<Symbolic> getSymbolics() {
        return this.symbolics;
    }
    
    public void setSymbolics(Set<Symbolic> symbolics) {
        this.symbolics = symbolics;
    }

@ManyToMany(fetch=FetchType.EAGER)
    @JoinTable(name="public_association_has_statuse", catalog="register_of_public_association", joinColumns = { 
        @JoinColumn(name="public_association_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="statuse_id", nullable=false, updatable=false) })
    public Set<Statuse> getStatuses() {
        return this.statuses;
    }
    
    public void setStatuses(Set<Statuse> statuses) {
        this.statuses = statuses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="publicAssociation")
    public Set<PublicAssociationHasPerson> getPublicAssociationHasPersons() {
        return this.publicAssociationHasPersons;
    }
    
    public void setPublicAssociationHasPersons(Set<PublicAssociationHasPerson> publicAssociationHasPersons) {
        this.publicAssociationHasPersons = publicAssociationHasPersons;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="unit_of_public_association", catalog="register_of_public_association", joinColumns = { 
        @JoinColumn(name="public_association_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="public_association_unit_id", nullable=false, updatable=false) })
    public Set<PublicAssociation> getPublicAssociationsForPublicAssociationUnitId() {
        return this.publicAssociationsForPublicAssociationUnitId;
    }
    
    public void setPublicAssociationsForPublicAssociationUnitId(Set<PublicAssociation> publicAssociationsForPublicAssociationUnitId) {
        this.publicAssociationsForPublicAssociationUnitId = publicAssociationsForPublicAssociationUnitId;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="publicAssociation")
    public TerminationOfActivity getTerminationOfActivity() {
        return this.terminationOfActivity;
    }
    
    public void setTerminationOfActivity(TerminationOfActivity terminationOfActivity) {
        this.terminationOfActivity = terminationOfActivity;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="unit_of_public_association", catalog="register_of_public_association", joinColumns = { 
        @JoinColumn(name="public_association_unit_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="public_association_id", nullable=false, updatable=false) })
    public Set<PublicAssociation> getPublicAssociationsForPublicAssociationId() {
        return this.publicAssociationsForPublicAssociationId;
    }
    
    public void setPublicAssociationsForPublicAssociationId(Set<PublicAssociation> publicAssociationsForPublicAssociationId) {
        this.publicAssociationsForPublicAssociationId = publicAssociationsForPublicAssociationId;
    }




}


